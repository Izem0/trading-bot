name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  publish_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Create strategies.py file
        env:
          STRATEGIES: ${{ secrets.STRATEGIES }}
        run: |
          echo "${STRATEGIES}" > strategies.py
      
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          IMAGE_NAME: ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPO }}:${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR 
          echo "Building image to ECR..."
          docker build -t $IMAGE_NAME .
          echo "Pushing image to ECR..."
          docker push $IMAGE_NAME
          echo "::set-output name=image::$IMAGE_NAME"

  deploy_to_lambda:
    runs-on: ubuntu-latest
    needs: publish_docker_image
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install AWS CLI
        run: |
          pip install awscli

      - name: Deploy ECR Image to Lambda
        env:
          IMAGE_NAME: ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPO }}:${{ github.sha }}
        run: |
          aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --image-uri $IMAGE_NAME
